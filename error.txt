printf("line no.: %d\t Semantic error: The ID %s is already used before in the parameter \n", head->lineno, temp->id);
printf("line no.: %d\t Semantic error: The function \"%s\" is a recursive function call \n", lineno, funid);
printf("line no.: %d\t Semantic error: output parameter \"%s\" is not assigned value in scope of function \"%s\" \n", ((htHead)stRoot->data)->lineno, temp->id, ((htHead)stRoot->data)->scope);
printf("line no.: %d\t Semantic error: type of parameter \"%s\" (\"%s\") and ID \"%s\" (\"%s\") do not match \n", lineno, input->id, keys2[input->type], ((tokenPtr)inputAST->data)->string, keys2[type]);
printf("line no.: %d\t Semantic error: The ID \"%s\" is not declared \n", lineno, ((tokenPtr)inputAST->data)->string);
printf("line no.: %d\t Semantic error: mismatch parameter length \n", lineno);
printf("line no.: %d\t Semantic error: Matrix Size mismatch \n", lineno);
printf("line no.: %d\t Semantic error: Matrix Row Size variable \n", ((tokenPtr)astRoot->child->child->data)->lineno);
printf("line no.: %d\t Semantic error: Function \"%s\" is being overloaded which is not allowed \n", funcid, lineno);
printf("line no.: %d\t Semantic error: Type mismatch LHS (\"%s\") and RHS (\"%s\") \n", ((tokenPtr)astRoot->child->data)->lineno, keys2[lhs], keys2[rhs]);
printf("line no.: %d\t Semantic error: Redeclaration of ID \"%s\" \n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: Function \"%s\" not defined in current scope %d\n", ((tokenPtr)child->data)->lineno), ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: \"%s\" should be of type INT \n", ((tokenPtr)child->data)->string, ((tokenPtr)child->data)->lineno);
printf("line no.: %d\t Semantic error: \"%s\" should be of type MATRIX or LHS should have only 1 parameter\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: \"%s\" should be of type STRING or LHS should have 2 parameters\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: \"%s\" is of type STRING so LHS should have 1 parameters\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: \"%s\" is of type MATRIX so LHS should have 2 parameters\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string);
printf("line no.: %d\t Semantic error: \"%s\" is of type \"%s\" so  RHS should be STRING(LHS: 1 parameter) or MATRIX(LHS:2 parameters)\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string, keys2[((tokenPtr)child->data)->type]);
printf("line no.: %d\t Semantic error: %s is of type %s, only INT and REAL can be READ\n", ((tokenPtr)child->data)->lineno, ((tokenPtr)child->data)->string, keys2[checkDeclaration(stRoot, child->data)]);
printf("line no.: %d\t Semantic error: BOOLEAN Expression incorrect\n", ((tokenPtr)temp->data)->lineno);
